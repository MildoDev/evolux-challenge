{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Dev: docker compose up",
      "type": "shell",
      "command": "export USER_ID=`id -u` && export GROUP_ID=`id -g` && docker compose -f infra/dev/docker-compose.yml up"
    },
    {
      "label": "Dev: docker compose up --build",
      "type": "shell",
      "command": "export USER_ID=`id -u` && export GROUP_ID=`id -g` && docker compose -f infra/dev/docker-compose.yml up --build"
    },
    {
      "label": "Dev: docker compose stop",
      "type": "shell",
      "command": "export USER_ID=`id -u` && export GROUP_ID=`id -g` && docker compose -f infra/dev/docker-compose.yml stop"
    },
    {
      "label": "Dev: docker compose down",
      "type": "shell",
      "command": "export USER_ID=`id -u` && export GROUP_ID=`id -g` && docker compose -f infra/dev/docker-compose.yml down --remove-orphans -v"
    },
    {
      "label": "Dev: docker compose run web poetry run coverage run",
      "type": "shell",
      "command": "export USER_ID=`id -u` && export GROUP_ID=`id -g` && docker compose -f infra/dev/docker-compose.yml up -d db-test && docker compose -f infra/dev/docker-compose.yml run --no-deps web poetry run coverage run && docker compose -f infra/dev/docker-compose.yml --profile test down --remove-orphans -v"
    },
    {
      "label": "Dev: docker compose up db-test",
      "type": "shell",
      "command": "export USER_ID=`id -u` && export GROUP_ID=`id -g` && docker compose -f infra/dev/docker-compose.yml up db-test"
    },
    {
      "label": "Dev: docker compose down db-test",
      "type": "shell",
      "command": "export USER_ID=`id -u` && export GROUP_ID=`id -g` && docker compose -f infra/dev/docker-compose.yml down db-test --remove-orphans -v"
    },
    {
      "label": "Prod: docker compose up",
      "type": "shell",
      "command": "export USER_ID=`id -u` && export GROUP_ID=`id -g` && docker compose -f infra/prod/docker-compose.yml up"
    },
    {
      "label": "Local: poetry install && poetry run pre-commit install --install-hooks",
      "type": "shell",
      "command": "poetry install && poetry run pre-commit install --install-hooks"
    }
  ]
}
